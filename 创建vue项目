1、安装vue
  npm install vue
  npm install vue -g （全局安装vue）
2、安装vue-cli
  npm install vue-cli -g
3、vue init webpack my-project
4、npm install
5、npm run dev
 分环境打包配置
 安装 cross-env:  npm install cross-env –-save-dev 
 a.修改packjson.js配置
    "build:test": "cross-env NODE_ENV=production env_config=test node build/build.js",
    "build:prod": "cross-env NODE_ENV=production env_config=prod node build/build.js"
 b.在config文件夹下面修改dev.env.js和prod.env.js
    dev.env.js  
        'use strict'
        const merge = require('webpack-merge')
        const prodEnv = require('./prod.env')

        module.exports = merge(prodEnv, {
          NODE_ENV: '"development"',
          ENV_CONFIG: '"development"'
        })
   pro.env.js
      'use strict'
      module.exports = {
        NODE_ENV: '"production"',
        ENV_CONFIG: '"prod"'
      }
   test.env.js
      'use strict'
      const merge = require('webpack-merge')
      const devEnv = require('./dev.env')

      module.exports = merge(devEnv, {
        NODE_ENV: '"testing"',
        ENV_CONFIG: '"test"'
      })
   index.js
    build中添加
    build{
        testEnv: require('./test.env'),
        prodEnv: require('./prod.env'),
    }

 c.在build文件夹下面添加 webpack.text.conf.js
    修改build.js文件
       注释
         process.env.NODE_ENV = 'production'
         const spinner = ora('building for production...')
       添加
        const webpackConfig_prod = require('./webpack.prod.conf')
        const webpackConfig_test = require('./webpack.test.conf')
        let webpackConfig
        let spinner

        if (process.env.env_config === 'test') {
          spinner = ora('building for test...')
        } else {
          spinner = ora('building for prod...')
        }
       引用
       rm(path.join(config.build.assetsRoot, config.build.assetsSubDirectory), err => {
          if (err) throw err
          if (process.env.env_config === 'test') {
            webpackConfig = webpackConfig_test
          } else {
            webpackConfig = webpackConfig_prod
          }
       }
      webpack.base.conf.js
        修改
        entry: {
          app: [ 'babel-polyfill', './src/main.js' ]
        },
       webpack.prod.conf.js
       修改
       const env = config.build[process.env.env_config + 'Env']
  
 
